namespace Getir.Application.DTO;

// User Activity Log DTOs
public record CreateUserActivityLogRequest(
    Guid UserId,
    string UserName,
    string ActivityType,
    string ActivityDescription,
    string? EntityType = null,
    string? EntityId = null,
    string? ActivityData = null,
    string? IpAddress = null,
    string? UserAgent = null,
    string? SessionId = null,
    string? RequestId = null,
    string? DeviceType = null,
    string? Browser = null,
    string? OperatingSystem = null,
    double? Latitude = null,
    double? Longitude = null,
    string? Location = null,
    int Duration = 0,
    bool IsSuccess = true,
    string? ErrorMessage = null);

public record UserActivityLogResponse(
    Guid Id,
    Guid UserId,
    string UserName,
    string ActivityType,
    string ActivityDescription,
    string? EntityType,
    string? EntityId,
    string? ActivityData,
    string? IpAddress,
    string? UserAgent,
    string? SessionId,
    string? RequestId,
    string? DeviceType,
    string? Browser,
    string? OperatingSystem,
    double? Latitude,
    double? Longitude,
    string? Location,
    DateTime Timestamp,
    int Duration,
    bool IsSuccess,
    string? ErrorMessage);

// System Change Log DTOs
public record CreateSystemChangeLogRequest(
    string ChangeType,
    string EntityType,
    string EntityId,
    string? EntityName = null,
    string? OldValues = null,
    string? NewValues = null,
    string? ChangedFields = null,
    string? ChangeReason = null,
    string? ChangeSource = null,
    Guid? ChangedByUserId = null,
    string? ChangedByUserName = null,
    string? IpAddress = null,
    string? UserAgent = null,
    string? SessionId = null,
    string? RequestId = null,
    string? CorrelationId = null,
    bool IsSuccess = true,
    string? ErrorMessage = null,
    string? Severity = "INFO");

public record SystemChangeLogResponse(
    Guid Id,
    string ChangeType,
    string EntityType,
    string EntityId,
    string? EntityName,
    string? OldValues,
    string? NewValues,
    string? ChangedFields,
    string? ChangeReason,
    string? ChangeSource,
    Guid? ChangedByUserId,
    string? ChangedByUserName,
    string? IpAddress,
    string? UserAgent,
    string? SessionId,
    string? RequestId,
    string? CorrelationId,
    DateTime Timestamp,
    bool IsSuccess,
    string? ErrorMessage,
    string? Severity);

// Security Event Log DTOs
public record CreateSecurityEventLogRequest(
    string EventType,
    string EventTitle,
    string EventDescription,
    string? Severity = "MEDIUM",
    string? RiskLevel = "MEDIUM",
    Guid? UserId = null,
    string? UserName = null,
    string? UserRole = null,
    string? IpAddress = null,
    string? UserAgent = null,
    string? DeviceFingerprint = null,
    string? SessionId = null,
    string? RequestId = null,
    string? CorrelationId = null,
    string? EventData = null,
    string? ThreatIndicators = null,
    string? MitigationActions = null,
    string? Source = null,
    string? Category = null,
    double? Latitude = null,
    double? Longitude = null,
    string? Location = null,
    bool RequiresInvestigation = false,
    bool IsFalsePositive = false);

public record SecurityEventLogResponse(
    Guid Id,
    string EventType,
    string EventTitle,
    string EventDescription,
    string? Severity,
    string? RiskLevel,
    Guid? UserId,
    string? UserName,
    string? UserRole,
    string? IpAddress,
    string? UserAgent,
    string? DeviceFingerprint,
    string? SessionId,
    string? RequestId,
    string? CorrelationId,
    string? EventData,
    string? ThreatIndicators,
    string? MitigationActions,
    string? Source,
    string? Category,
    double? Latitude,
    double? Longitude,
    string? Location,
    DateTime Timestamp,
    bool IsResolved,
    DateTime? ResolvedAt,
    string? ResolvedBy,
    string? ResolutionNotes,
    bool RequiresInvestigation,
    bool IsFalsePositive);

// Log Analysis Report DTOs
public record CreateLogAnalysisReportRequest(
    string ReportType,
    string ReportTitle,
    DateTime ReportStartDate,
    DateTime ReportEndDate,
    string? ReportDescription = null,
    string? TimeZone = "UTC",
    string? Format = "JSON",
    bool IsPublic = false,
    string? Recipients = null,
    bool IsScheduled = false,
    string? SchedulePattern = null);

public record LogAnalysisReportResponse(
    Guid Id,
    string ReportType,
    string ReportTitle,
    string? ReportDescription,
    DateTime ReportStartDate,
    DateTime ReportEndDate,
    string? TimeZone,
    string? ReportData,
    string? Summary,
    string? Insights,
    string? Alerts,
    string? Charts,
    string? Status,
    string? Format,
    string? FilePath,
    string? FileName,
    long? FileSizeBytes,
    Guid? GeneratedByUserId,
    string? GeneratedByUserName,
    string? GeneratedByRole,
    DateTime GeneratedAt,
    DateTime? ExpiresAt,
    bool IsPublic,
    string? Recipients,
    bool IsScheduled,
    string? SchedulePattern,
    DateTime? NextScheduledRun,
    int GenerationTimeMs,
    string? ErrorMessage);

// Query DTOs
public record AuditLogQueryRequest(
    DateTime? StartDate = null,
    DateTime? EndDate = null,
    string? UserId = null,
    string? UserName = null,
    string? Action = null,
    string? EntityType = null,
    string? EntityId = null,
    string? IpAddress = null,
    string? SessionId = null,
    bool? IsSuccess = null,
    int PageNumber = 1,
    int PageSize = 50,
    string? SortBy = "Timestamp",
    string? SortDirection = "DESC");

public record UserActivityQueryRequest(
    DateTime? StartDate = null,
    DateTime? EndDate = null,
    Guid? UserId = null,
    string? UserName = null,
    string? ActivityType = null,
    string? EntityType = null,
    string? EntityId = null,
    string? DeviceType = null,
    string? Browser = null,
    string? OperatingSystem = null,
    bool? IsSuccess = null,
    int PageNumber = 1,
    int PageSize = 50,
    string? SortBy = "Timestamp",
    string? SortDirection = "DESC");

public record SystemChangeQueryRequest(
    DateTime? StartDate = null,
    DateTime? EndDate = null,
    string? ChangeType = null,
    string? EntityType = null,
    string? EntityId = null,
    Guid? ChangedByUserId = null,
    string? ChangedByUserName = null,
    string? ChangeSource = null,
    string? Severity = null,
    bool? IsSuccess = null,
    int PageNumber = 1,
    int PageSize = 50,
    string? SortBy = "Timestamp",
    string? SortDirection = "DESC");

public record SecurityEventQueryRequest(
    DateTime? StartDate = null,
    DateTime? EndDate = null,
    string? EventType = null,
    string? Severity = null,
    string? RiskLevel = null,
    Guid? UserId = null,
    string? UserName = null,
    string? UserRole = null,
    string? IpAddress = null,
    string? Source = null,
    string? Category = null,
    bool? IsResolved = null,
    bool? RequiresInvestigation = null,
    bool? IsFalsePositive = null,
    int PageNumber = 1,
    int PageSize = 50,
    string? SortBy = "Timestamp",
    string? SortDirection = "DESC");

// Analytics DTOs
public record AuditLogAnalyticsRequest(
    DateTime StartDate,
    DateTime EndDate,
    string? GroupBy = "DAY", // DAY, WEEK, MONTH, HOUR
    string? EntityType = null,
    string? Action = null,
    string? UserId = null);

public record AuditLogAnalyticsResponse(
    DateTime StartDate,
    DateTime EndDate,
    string GroupBy,
    List<AuditLogAnalyticsData> Data,
    AuditLogAnalyticsSummary Summary,
    DateTime GeneratedAt);

public record AuditLogAnalyticsData(
    string Period,
    int TotalEvents,
    int SuccessfulEvents,
    int FailedEvents,
    int UniqueUsers,
    Dictionary<string, int> ActionCounts,
    Dictionary<string, int> EntityTypeCounts);

public record AuditLogAnalyticsSummary(
    int TotalEvents,
    int SuccessfulEvents,
    int FailedEvents,
    int UniqueUsers,
    double SuccessRate,
    Dictionary<string, int> TopActions,
    Dictionary<string, int> TopEntityTypes,
    Dictionary<string, int> TopUsers,
    List<string> Alerts);
