@model List<Getir.MerchantPortal.Models.StockAlertResponse>
@{
    ViewData["Title"] = "Stok Uyarıları";
}

@section Styles {
    <link rel="stylesheet" href="~/css/dashboard-modern.css" />
}

<!-- Page Header -->
<div class="d-flex justify-content-between align-items-center mb-4 fade-in">
    <div>
        <h2 class="mb-1">
            <i class="fas fa-exclamation-triangle me-2" style="background: linear-gradient(135deg, #f59e0b 0%, #d97706 100%); -webkit-background-clip: text; -webkit-text-fill-color: transparent;"></i>
            Stok Uyarıları
        </h2>
        <p class="text-muted mb-0">Düşük stok ve stok tükenmesi uyarıları</p>
    </div>
    <a href="/Products" class="btn btn-outline-primary" style="border-radius: 12px;">
        <i class="fas fa-box me-2"></i>Ürünlere Dön
    </a>
</div>

<!-- Alert Summary -->
<div class="row g-4 mb-4">
    <div class="col-md-4">
        <div class="stat-card-gradient warning fade-in" style="animation-delay: 0.1s;">
            <div class="gradient-bg"></div>
            <div class="stat-icon-modern warning">
                <i class="fas fa-exclamation-circle"></i>
            </div>
            <div class="stat-label">Düşük Stok</div>
            <div class="stat-value">@Model.Count(a => a.AlertType == "LowStock" && !a.IsResolved)</div>
        </div>
    </div>
    
    <div class="col-md-4">
        <div class="stat-card-gradient danger fade-in" style="animation-delay: 0.2s;">
            <div class="gradient-bg"></div>
            <div class="stat-icon-modern" style="background: linear-gradient(135deg, #ef4444 0%, #dc2626 100%);">
                <i class="fas fa-times-circle"></i>
            </div>
            <div class="stat-label">Stok Tükendi</div>
            <div class="stat-value">@Model.Count(a => a.AlertType == "OutOfStock" && !a.IsResolved)</div>
        </div>
    </div>
    
    <div class="col-md-4">
        <div class="stat-card-gradient success fade-in" style="animation-delay: 0.3s;">
            <div class="gradient-bg"></div>
            <div class="stat-icon-modern success">
                <i class="fas fa-check-circle"></i>
            </div>
            <div class="stat-label">Çözüldü</div>
            <div class="stat-value">@Model.Count(a => a.IsResolved)</div>
        </div>
    </div>
</div>

<!-- Active Alerts -->
<div class="chart-container-modern fade-in" style="animation-delay: 0.4s;">
    <div class="chart-header mb-4">
        <div class="chart-title">
            <i class="fas fa-bell"></i>
            Aktif Uyarılar
        </div>
        <span class="badge bg-danger">@Model.Count(a => !a.IsResolved) aktif</span>
    </div>
    
    @if (Model != null && Model.Any(a => !a.IsResolved))
    {
        <div class="table-responsive">
            <table class="table table-modern table-hover mb-0">
                <thead>
                    <tr>
                        <th>ÜRÜN</th>
                        <th>MEVCUT STOK</th>
                        <th>MİNİMUM</th>
                        <th>TİP</th>
                        <th>MESAJ</th>
                        <th>TARİH</th>
                        <th>İŞLEM</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var alert in Model.Where(a => !a.IsResolved).OrderByDescending(a => a.CreatedAt))
                    {
                        var alertBadgeClass = alert.AlertType switch
                        {
                            "LowStock" => "warning",
                            "OutOfStock" => "danger",
                            "Overstock" => "info",
                            _ => "secondary"
                        };
                        
                        var alertIcon = alert.AlertType switch
                        {
                            "LowStock" => "exclamation-circle",
                            "OutOfStock" => "times-circle",
                            "Overstock" => "info-circle",
                            _ => "bell"
                        };
                        
                        <tr>
                            <td>
                                <div class="fw-bold">@alert.ProductName</div>
                                @if (!string.IsNullOrEmpty(alert.VariantName))
                                {
                                    <small class="text-muted">@alert.VariantName</small>
                                }
                            </td>
                            <td>
                                <span class="badge bg-@alertBadgeClass">@alert.CurrentStock</span>
                            </td>
                            <td>@alert.MinimumStock</td>
                            <td>
                                <span class="badge bg-@alertBadgeClass">
                                    <i class="fas fa-@alertIcon me-1"></i>
                                    @(alert.AlertType == "LowStock" ? "Düşük" : (alert.AlertType == "OutOfStock" ? "Tükendi" : alert.AlertType))
                                </span>
                            </td>
                            <td><small>@alert.Message</small></td>
                            <td>
                                <small class="text-muted">
                                    <i class="far fa-clock me-1"></i>
                                    @alert.CreatedAt.ToString("dd MMM, HH:mm")
                                </small>
                            </td>
                            <td>
                                <div class="btn-group btn-group-sm">
                                    <a href="/Stock/History?productId=@alert.ProductId" class="btn btn-outline-primary" title="Stok Geçmişi">
                                        <i class="fas fa-history"></i>
                                    </a>
                                    <a href="/Products/Edit/@alert.ProductId" class="btn btn-outline-secondary" title="Stok Güncelle">
                                        <i class="fas fa-edit"></i>
                                    </a>
                                </div>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    }
    else
    {
        <div class="text-center py-5">
            <i class="fas fa-check-circle fa-4x text-success mb-3"></i>
            <h5 class="text-success">Tüm stok seviyeleri normal!</h5>
            <p class="text-muted">Şu anda aktif uyarı bulunmuyor.</p>
        </div>
    }
</div>

<!-- Resolved Alerts (Optional) -->
@if (Model != null && Model.Any(a => a.IsResolved))
{
    <div class="chart-container-modern mt-4 fade-in" style="animation-delay: 0.5s;">
        <div class="chart-header mb-4">
            <div class="chart-title">
                <i class="fas fa-check"></i>
                Çözümlenmiş Uyarılar
            </div>
            <span class="badge bg-success">@Model.Count(a => a.IsResolved)</span>
        </div>
        
        <div class="table-responsive">
            <table class="table table-modern table-hover mb-0">
                <thead>
                    <tr>
                        <th>ÜRÜN</th>
                        <th>TİP</th>
                        <th>MESAJ</th>
                        <th>OLUŞTURMA</th>
                        <th>ÇÖZÜM</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var alert in Model.Where(a => a.IsResolved).OrderByDescending(a => a.ResolvedAt).Take(10))
                    {
                        <tr class="opacity-75">
                            <td>
                                <div class="fw-bold">@alert.ProductName</div>
                                @if (!string.IsNullOrEmpty(alert.VariantName))
                                {
                                    <small class="text-muted">@alert.VariantName</small>
                                }
                            </td>
                            <td>
                                <span class="badge bg-secondary">
                                    @(alert.AlertType == "LowStock" ? "Düşük Stok" : (alert.AlertType == "OutOfStock" ? "Stok Tükendi" : alert.AlertType))
                                </span>
                            </td>
                            <td><small>@alert.Message</small></td>
                            <td>
                                <small class="text-muted">
                                    @alert.CreatedAt.ToString("dd MMM HH:mm")
                                </small>
                            </td>
                            <td>
                                <small class="text-success">
                                    <i class="fas fa-check me-1"></i>
                                    @alert.ResolvedAt?.ToString("dd MMM HH:mm")
                                </small>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
}

