{
	"info": {
		"_postman_id": "getir-api-collection-2025",
		"name": "Getir Clone API",
		"description": ".NET 9 Getir Clone API - Complete Collection with Auth, Merchants, Products & Orders",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "getir-api"
	},
	"item": [
		{
			"name": "üîê Authentication",
			"item": [
				{
					"name": "Register",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200) {",
									"    const response = pm.response.json();",
									"    pm.environment.set('accessToken', response.accessToken);",
									"    pm.environment.set('refreshToken', response.refreshToken);",
									"    pm.test('Registration successful', () => {",
									"        pm.expect(response.accessToken).to.be.a('string');",
									"    });",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"john.doe@example.com\",\n  \"password\": \"Test123!\",\n  \"firstName\": \"John\",\n  \"lastName\": \"Doe\",\n  \"phoneNumber\": \"+905551234567\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/auth/register",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"register"
							]
						},
						"description": "Register a new user account"
					},
					"response": []
				},
				{
					"name": "Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200) {",
									"    const response = pm.response.json();",
									"    pm.environment.set('accessToken', response.accessToken);",
									"    pm.environment.set('refreshToken', response.refreshToken);",
									"    pm.test('Login successful', () => {",
									"        pm.expect(response.accessToken).to.be.a('string');",
									"        pm.expect(response.refreshToken).to.be.a('string');",
									"    });",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"john.doe@example.com\",\n  \"password\": \"Test123!\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/auth/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"login"
							]
						},
						"description": "Login with email and password"
					},
					"response": []
				},
				{
					"name": "Refresh Token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200) {",
									"    const response = pm.response.json();",
									"    pm.environment.set('accessToken', response.accessToken);",
									"    pm.environment.set('refreshToken', response.refreshToken);",
									"    pm.test('Token refresh successful', () => {",
									"        pm.expect(response.accessToken).to.be.a('string');",
									"    });",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"refreshToken\": \"{{refreshToken}}\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/auth/refresh",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"refresh"
							]
						},
						"description": "Refresh access token using refresh token"
					},
					"response": []
				},
				{
					"name": "Logout",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v1/auth/logout",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"logout"
							]
						},
						"description": "Logout and revoke all refresh tokens"
					},
					"response": []
				}
			],
			"description": "Authentication endpoints for user registration, login, and token management"
		},
		{
			"name": "üè™ Merchants",
			"item": [
				{
					"name": "List Merchants",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v1/merchants?page=1&pageSize=20&sortDir=desc",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"merchants"
							],
							"query": [
								{
									"key": "page",
									"value": "1"
								},
								{
									"key": "pageSize",
									"value": "20"
								},
								{
									"key": "sortBy",
									"value": "name",
									"disabled": true
								},
								{
									"key": "sortDir",
									"value": "desc"
								}
							]
						},
						"description": "Get paginated list of active merchants"
					},
					"response": []
				},
				{
					"name": "Get Merchant By ID",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v1/merchants/{{merchantId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"merchants",
								"{{merchantId}}"
							]
						},
						"description": "Get merchant details by ID"
					},
					"response": []
				},
				{
					"name": "Create Merchant",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200) {",
									"    const response = pm.response.json();",
									"    pm.environment.set('merchantId', response.id);",
									"    pm.test('Merchant created successfully', () => {",
									"        pm.expect(response.id).to.be.a('string');",
									"        pm.expect(response.name).to.equal('Migros Kadƒ±k√∂y');",
									"    });",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Migros Kadƒ±k√∂y\",\n  \"description\": \"Taze √ºr√ºnler ve market alƒ±≈üveri≈üi\",\n  \"categoryId\": \"{{categoryId}}\",\n  \"address\": \"Kadƒ±k√∂y, ƒ∞stanbul\",\n  \"latitude\": 40.9897,\n  \"longitude\": 29.0257,\n  \"phoneNumber\": \"+902161234567\",\n  \"email\": \"kadikoy@migros.com.tr\",\n  \"minimumOrderAmount\": 50,\n  \"deliveryFee\": 15\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/merchants",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"merchants"
							]
						},
						"description": "Create a new merchant (requires authentication)"
					},
					"response": []
				},
				{
					"name": "Update Merchant",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Migros Kadƒ±k√∂y - Updated\",\n  \"description\": \"G√ºncellenmi≈ü a√ßƒ±klama\",\n  \"address\": \"Kadƒ±k√∂y Merkez, ƒ∞stanbul\",\n  \"phoneNumber\": \"+902161234567\",\n  \"email\": \"kadikoy@migros.com.tr\",\n  \"minimumOrderAmount\": 60,\n  \"deliveryFee\": 20\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/merchants/{{merchantId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"merchants",
								"{{merchantId}}"
							]
						},
						"description": "Update merchant information (requires authentication)"
					},
					"response": []
				},
				{
					"name": "Delete Merchant",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v1/merchants/{{merchantId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"merchants",
								"{{merchantId}}"
							]
						},
						"description": "Soft delete merchant (requires authentication)"
					},
					"response": []
				}
			],
			"description": "Merchant management endpoints"
		},
		{
			"name": "üçî Products",
			"item": [
				{
					"name": "List Products by Merchant",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v1/products/merchant/{{merchantId}}?page=1&pageSize=20",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"products",
								"merchant",
								"{{merchantId}}"
							],
							"query": [
								{
									"key": "page",
									"value": "1"
								},
								{
									"key": "pageSize",
									"value": "20"
								}
							]
						},
						"description": "Get all products for a specific merchant"
					},
					"response": []
				},
				{
					"name": "Get Product By ID",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v1/products/{{productId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"products",
								"{{productId}}"
							]
						},
						"description": "Get product details by ID"
					},
					"response": []
				},
				{
					"name": "Create Product",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200) {",
									"    const response = pm.response.json();",
									"    pm.environment.set('productId', response.id);",
									"    pm.test('Product created successfully', () => {",
									"        pm.expect(response.id).to.be.a('string');",
									"    });",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"merchantId\": \"{{merchantId}}\",\n  \"categoryId\": \"{{categoryId}}\",\n  \"name\": \"S√ºt 1L\",\n  \"description\": \"Tam yaƒülƒ± s√ºt\",\n  \"price\": 35.50,\n  \"discountedPrice\": 29.90,\n  \"stockQuantity\": 100,\n  \"unit\": \"adet\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/products",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"products"
							]
						},
						"description": "Create a new product (requires authentication)"
					},
					"response": []
				},
				{
					"name": "Update Product",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"S√ºt 1L - G√ºncellenmi≈ü\",\n  \"description\": \"Tam yaƒülƒ± s√ºt - organik\",\n  \"price\": 40.00,\n  \"discountedPrice\": 35.00,\n  \"stockQuantity\": 150,\n  \"unit\": \"adet\",\n  \"isAvailable\": true\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/products/{{productId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"products",
								"{{productId}}"
							]
						},
						"description": "Update product information (requires authentication)"
					},
					"response": []
				},
				{
					"name": "Delete Product",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v1/products/{{productId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"products",
								"{{productId}}"
							]
						},
						"description": "Soft delete product (requires authentication)"
					},
					"response": []
				}
			],
			"description": "Product management endpoints"
		},
		{
			"name": "üì¶ Orders",
			"item": [
				{
					"name": "Create Order",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200) {",
									"    const response = pm.response.json();",
									"    pm.environment.set('orderId', response.id);",
									"    pm.test('Order created successfully', () => {",
									"        pm.expect(response.id).to.be.a('string');",
									"        pm.expect(response.orderNumber).to.be.a('string');",
									"        pm.expect(response.total).to.be.a('number');",
									"    });",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"merchantId\": \"{{merchantId}}\",\n  \"items\": [\n    {\n      \"productId\": \"{{productId}}\",\n      \"quantity\": 2,\n      \"notes\": \"Taze olsun l√ºtfen\"\n    }\n  ],\n  \"deliveryAddress\": \"Kadƒ±k√∂y Mah. Bahariye Cad. No:123 Daire:5\",\n  \"deliveryLatitude\": 40.9897,\n  \"deliveryLongitude\": 29.0257,\n  \"paymentMethod\": \"CreditCard\",\n  \"notes\": \"Kapƒ± zili √ßalƒ±≈ümƒ±yor, l√ºtfen arayƒ±n\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/orders",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"orders"
							]
						},
						"description": "Create a new order with transaction support (requires authentication)"
					},
					"response": []
				},
				{
					"name": "Get Order By ID",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v1/orders/{{orderId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"orders",
								"{{orderId}}"
							]
						},
						"description": "Get order details by ID (requires authentication)"
					},
					"response": []
				},
				{
					"name": "List User Orders",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v1/orders?page=1&pageSize=10&sortDir=desc",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"orders"
							],
							"query": [
								{
									"key": "page",
									"value": "1"
								},
								{
									"key": "pageSize",
									"value": "10"
								},
								{
									"key": "sortDir",
									"value": "desc"
								}
							]
						},
						"description": "Get paginated list of user's orders (requires authentication)"
					},
					"response": []
				}
			],
			"description": "Order management endpoints with transaction support"
		},
		{
			"name": "üìÇ Categories",
			"item": [
				{
					"name": "List Categories",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v1/categories?page=1&pageSize=20",
							"host": ["{{baseUrl}}"],
							"path": ["api", "v1", "categories"],
							"query": [
								{"key": "page", "value": "1"},
								{"key": "pageSize", "value": "20"}
							]
						},
						"description": "Get all active categories"
					},
					"response": []
				},
				{
					"name": "Get Category By ID",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v1/categories/{{categoryId}}",
							"host": ["{{baseUrl}}"],
							"path": ["api", "v1", "categories", "{{categoryId}}"]
						}
					},
					"response": []
				},
				{
					"name": "Create Category",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200) {",
									"    const response = pm.response.json();",
									"    pm.environment.set('categoryId', response.id);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {"type": "bearer", "bearer": [{"key": "token", "value": "{{accessToken}}", "type": "string"}]},
						"method": "POST",
						"header": [{"key": "Content-Type", "value": "application/json"}],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Market\",\n  \"description\": \"G√ºnl√ºk ihtiya√ß √ºr√ºnleri\",\n  \"imageUrl\": \"https://example.com/market.jpg\",\n  \"displayOrder\": 1\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/categories",
							"host": ["{{baseUrl}}"],
							"path": ["api", "v1", "categories"]
						}
					},
					"response": []
				},
				{
					"name": "Update Category",
					"request": {
						"auth": {"type": "bearer", "bearer": [{"key": "token", "value": "{{accessToken}}", "type": "string"}]},
						"method": "PUT",
						"header": [{"key": "Content-Type", "value": "application/json"}],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Market - Updated\",\n  \"description\": \"G√ºncellenmi≈ü a√ßƒ±klama\",\n  \"imageUrl\": \"https://example.com/market-new.jpg\",\n  \"displayOrder\": 1,\n  \"isActive\": true\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/categories/{{categoryId}}",
							"host": ["{{baseUrl}}"],
							"path": ["api", "v1", "categories", "{{categoryId}}"]
						}
					},
					"response": []
				},
				{
					"name": "Delete Category",
					"request": {
						"auth": {"type": "bearer", "bearer": [{"key": "token", "value": "{{accessToken}}", "type": "string"}]},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v1/categories/{{categoryId}}",
							"host": ["{{baseUrl}}"],
							"path": ["api", "v1", "categories", "{{categoryId}}"]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "üë§ User Management",
			"item": [
				{
					"name": "Get User Addresses",
					"request": {
						"auth": {"type": "bearer", "bearer": [{"key": "token", "value": "{{accessToken}}", "type": "string"}]},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v1/users/addresses",
							"host": ["{{baseUrl}}"],
							"path": ["api", "v1", "users", "addresses"]
						}
					},
					"response": []
				},
				{
					"name": "Add Address",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200) {",
									"    const response = pm.response.json();",
									"    pm.environment.set('addressId', response.id);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {"type": "bearer", "bearer": [{"key": "token", "value": "{{accessToken}}", "type": "string"}]},
						"method": "POST",
						"header": [{"key": "Content-Type", "value": "application/json"}],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"title\": \"Ev\",\n  \"fullAddress\": \"Kadƒ±k√∂y Mah. Bahariye Cad. No:123 D:5\",\n  \"city\": \"ƒ∞stanbul\",\n  \"district\": \"Kadƒ±k√∂y\",\n  \"latitude\": 40.9897,\n  \"longitude\": 29.0257\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/users/addresses",
							"host": ["{{baseUrl}}"],
							"path": ["api", "v1", "users", "addresses"]
						}
					},
					"response": []
				},
				{
					"name": "Update Address",
					"request": {
						"auth": {"type": "bearer", "bearer": [{"key": "token", "value": "{{accessToken}}", "type": "string"}]},
						"method": "PUT",
						"header": [{"key": "Content-Type", "value": "application/json"}],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"title\": \"Ev - G√ºncellenmi≈ü\",\n  \"fullAddress\": \"Kadƒ±k√∂y Mah. Bahariye Cad. No:125 D:10\",\n  \"city\": \"ƒ∞stanbul\",\n  \"district\": \"Kadƒ±k√∂y\",\n  \"latitude\": 40.9900,\n  \"longitude\": 29.0260\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/users/addresses/{{addressId}}",
							"host": ["{{baseUrl}}"],
							"path": ["api", "v1", "users", "addresses", "{{addressId}}"]
						}
					},
					"response": []
				},
				{
					"name": "Set Default Address",
					"request": {
						"auth": {"type": "bearer", "bearer": [{"key": "token", "value": "{{accessToken}}", "type": "string"}]},
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v1/users/addresses/{{addressId}}/set-default",
							"host": ["{{baseUrl}}"],
							"path": ["api", "v1", "users", "addresses", "{{addressId}}", "set-default"]
						}
					},
					"response": []
				},
				{
					"name": "Delete Address",
					"request": {
						"auth": {"type": "bearer", "bearer": [{"key": "token", "value": "{{accessToken}}", "type": "string"}]},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v1/users/addresses/{{addressId}}",
							"host": ["{{baseUrl}}"],
							"path": ["api", "v1", "users", "addresses", "{{addressId}}"]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "üõí Shopping Cart",
			"item": [
				{
					"name": "Get Cart",
					"request": {
						"auth": {"type": "bearer", "bearer": [{"key": "token", "value": "{{accessToken}}", "type": "string"}]},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v1/cart",
							"host": ["{{baseUrl}}"],
							"path": ["api", "v1", "cart"]
						}
					},
					"response": []
				},
				{
					"name": "Add to Cart",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200) {",
									"    const response = pm.response.json();",
									"    pm.environment.set('cartItemId', response.id);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {"type": "bearer", "bearer": [{"key": "token", "value": "{{accessToken}}", "type": "string"}]},
						"method": "POST",
						"header": [{"key": "Content-Type", "value": "application/json"}],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"merchantId\": \"{{merchantId}}\",\n  \"productId\": \"{{productId}}\",\n  \"quantity\": 2,\n  \"notes\": \"Taze olsun l√ºtfen\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/cart/items",
							"host": ["{{baseUrl}}"],
							"path": ["api", "v1", "cart", "items"]
						}
					},
					"response": []
				},
				{
					"name": "Update Cart Item",
					"request": {
						"auth": {"type": "bearer", "bearer": [{"key": "token", "value": "{{accessToken}}", "type": "string"}]},
						"method": "PUT",
						"header": [{"key": "Content-Type", "value": "application/json"}],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"quantity\": 3,\n  \"notes\": \"G√ºncellenmi≈ü not\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/cart/items/{{cartItemId}}",
							"host": ["{{baseUrl}}"],
							"path": ["api", "v1", "cart", "items", "{{cartItemId}}"]
						}
					},
					"response": []
				},
				{
					"name": "Remove Cart Item",
					"request": {
						"auth": {"type": "bearer", "bearer": [{"key": "token", "value": "{{accessToken}}", "type": "string"}]},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v1/cart/items/{{cartItemId}}",
							"host": ["{{baseUrl}}"],
							"path": ["api", "v1", "cart", "items", "{{cartItemId}}"]
						}
					},
					"response": []
				},
				{
					"name": "Clear Cart",
					"request": {
						"auth": {"type": "bearer", "bearer": [{"key": "token", "value": "{{accessToken}}", "type": "string"}]},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v1/cart/clear",
							"host": ["{{baseUrl}}"],
							"path": ["api", "v1", "cart", "clear"]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "üéÅ Coupons & Campaigns",
			"item": [
				{
					"name": "Validate Coupon",
					"request": {
						"auth": {"type": "bearer", "bearer": [{"key": "token", "value": "{{accessToken}}", "type": "string"}]},
						"method": "POST",
						"header": [{"key": "Content-Type", "value": "application/json"}],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"code\": \"WELCOME50\",\n  \"orderAmount\": 100\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/coupons/validate",
							"host": ["{{baseUrl}}"],
							"path": ["api", "v1", "coupons", "validate"]
						}
					},
					"response": []
				},
				{
					"name": "Create Coupon",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200) {",
									"    const response = pm.response.json();",
									"    pm.environment.set('couponId', response.id);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {"type": "bearer", "bearer": [{"key": "token", "value": "{{accessToken}}", "type": "string"}]},
						"method": "POST",
						"header": [{"key": "Content-Type", "value": "application/json"}],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"code\": \"WELCOME50\",\n  \"title\": \"Ho≈ü Geldin ƒ∞ndirimi\",\n  \"description\": \"ƒ∞lk sipari≈üinize %50 indirim\",\n  \"discountType\": \"Percentage\",\n  \"discountValue\": 50,\n  \"minimumOrderAmount\": 50,\n  \"maximumDiscountAmount\": 25,\n  \"startDate\": \"2025-10-01T00:00:00Z\",\n  \"endDate\": \"2025-12-31T23:59:59Z\",\n  \"usageLimit\": 100\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/coupons",
							"host": ["{{baseUrl}}"],
							"path": ["api", "v1", "coupons"]
						}
					},
					"response": []
				},
				{
					"name": "Get Coupons",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v1/coupons?page=1&pageSize=20",
							"host": ["{{baseUrl}}"],
							"path": ["api", "v1", "coupons"],
							"query": [
								{"key": "page", "value": "1"},
								{"key": "pageSize", "value": "20"}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Active Campaigns",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v1/campaigns?page=1&pageSize=10",
							"host": ["{{baseUrl}}"],
							"path": ["api", "v1", "campaigns"],
							"query": [
								{"key": "page", "value": "1"},
								{"key": "pageSize", "value": "10"}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "üîî Notifications",
			"item": [
				{
					"name": "Get Notifications",
					"request": {
						"auth": {"type": "bearer", "bearer": [{"key": "token", "value": "{{accessToken}}", "type": "string"}]},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v1/notifications?page=1&pageSize=20",
							"host": ["{{baseUrl}}"],
							"path": ["api", "v1", "notifications"],
							"query": [
								{"key": "page", "value": "1"},
								{"key": "pageSize", "value": "20"}
							]
						}
					},
					"response": []
				},
				{
					"name": "Mark Notifications as Read",
					"request": {
						"auth": {"type": "bearer", "bearer": [{"key": "token", "value": "{{accessToken}}", "type": "string"}]},
						"method": "POST",
						"header": [{"key": "Content-Type", "value": "application/json"}],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"notificationIds\": [\n    \"{{notificationId}}\"\n  ]\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/notifications/mark-as-read",
							"host": ["{{baseUrl}}"],
							"path": ["api", "v1", "notifications", "mark-as-read"]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "üö¥ Courier",
			"item": [
				{
					"name": "Get Assigned Orders",
					"request": {
						"auth": {"type": "bearer", "bearer": [{"key": "token", "value": "{{accessToken}}", "type": "string"}]},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v1/courier/orders?page=1&pageSize=20",
							"host": ["{{baseUrl}}"],
							"path": ["api", "v1", "courier", "orders"],
							"query": [
								{"key": "page", "value": "1"},
								{"key": "pageSize", "value": "20"}
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Courier Location",
					"request": {
						"auth": {"type": "bearer", "bearer": [{"key": "token", "value": "{{accessToken}}", "type": "string"}]},
						"method": "POST",
						"header": [{"key": "Content-Type", "value": "application/json"}],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"latitude\": 40.9900,\n  \"longitude\": 29.0260\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/courier/location/update",
							"host": ["{{baseUrl}}"],
							"path": ["api", "v1", "courier", "location", "update"]
						}
					},
					"response": []
				},
				{
					"name": "Set Courier Availability",
					"request": {
						"auth": {"type": "bearer", "bearer": [{"key": "token", "value": "{{accessToken}}", "type": "string"}]},
						"method": "POST",
						"header": [{"key": "Content-Type", "value": "application/json"}],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"isAvailable\": true\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/courier/availability/set",
							"host": ["{{baseUrl}}"],
							"path": ["api", "v1", "courier", "availability", "set"]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "üîé Search",
			"item": [
				{
					"name": "Search Products",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v1/search/products?query=s√ºt&page=1&pageSize=20&minPrice=10&maxPrice=100",
							"host": ["{{baseUrl}}"],
							"path": ["api", "v1", "search", "products"],
							"query": [
								{"key": "query", "value": "s√ºt"},
								{"key": "page", "value": "1"},
								{"key": "pageSize", "value": "20"},
								{"key": "merchantId", "value": "{{merchantId}}", "disabled": true},
								{"key": "categoryId", "value": "{{categoryId}}", "disabled": true},
								{"key": "minPrice", "value": "10"},
								{"key": "maxPrice", "value": "100"}
							]
						}
					},
					"response": []
				},
				{
					"name": "Search Merchants",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v1/search/merchants?query=migros&page=1&pageSize=20",
							"host": ["{{baseUrl}}"],
							"path": ["api", "v1", "search", "merchants"],
							"query": [
								{"key": "query", "value": "migros"},
								{"key": "page", "value": "1"},
								{"key": "pageSize", "value": "20"},
								{"key": "categoryId", "value": "{{categoryId}}", "disabled": true},
								{"key": "latitude", "value": "40.9897", "disabled": true},
								{"key": "longitude", "value": "29.0257", "disabled": true}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "‚ù§Ô∏è Health Check",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/health",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"health"
					]
				},
				"description": "Check API and database health status"
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "https://localhost:7001",
			"type": "string"
		},
		{
			"key": "accessToken",
			"value": "",
			"type": "string"
		},
		{
			"key": "refreshToken",
			"value": "",
			"type": "string"
		},
		{
			"key": "merchantId",
			"value": "",
			"type": "string"
		},
		{
			"key": "productId",
			"value": "",
			"type": "string"
		},
		{
			"key": "orderId",
			"value": "",
			"type": "string"
		},
		{
			"key": "categoryId",
			"value": "",
			"type": "string"
		},
		{
			"key": "addressId",
			"value": "",
			"type": "string"
		},
		{
			"key": "cartItemId",
			"value": "",
			"type": "string"
		},
		{
			"key": "couponId",
			"value": "",
			"type": "string"
		},
		{
			"key": "notificationId",
			"value": "",
			"type": "string"
		}
	]
}
