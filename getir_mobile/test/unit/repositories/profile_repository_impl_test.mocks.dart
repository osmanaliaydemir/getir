// Mocks generated by Mockito 5.4.4 from annotations
// in getir_mobile/test/unit/repositories/profile_repository_impl_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:getir_mobile/data/datasources/profile_datasource.dart' as _i3;
import 'package:getir_mobile/domain/entities/user_profile.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeUserProfile_0 extends _i1.SmartFake implements _i2.UserProfile {
  _FakeUserProfile_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [ProfileDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockProfileDataSource extends _i1.Mock implements _i3.ProfileDataSource {
  MockProfileDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.UserProfile> getUserProfile() => (super.noSuchMethod(
        Invocation.method(
          #getUserProfile,
          [],
        ),
        returnValue: _i4.Future<_i2.UserProfile>.value(_FakeUserProfile_0(
          this,
          Invocation.method(
            #getUserProfile,
            [],
          ),
        )),
      ) as _i4.Future<_i2.UserProfile>);

  @override
  _i4.Future<_i2.UserProfile> updateUserProfile({
    required String? firstName,
    required String? lastName,
    String? phoneNumber,
    String? avatarUrl,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateUserProfile,
          [],
          {
            #firstName: firstName,
            #lastName: lastName,
            #phoneNumber: phoneNumber,
            #avatarUrl: avatarUrl,
          },
        ),
        returnValue: _i4.Future<_i2.UserProfile>.value(_FakeUserProfile_0(
          this,
          Invocation.method(
            #updateUserProfile,
            [],
            {
              #firstName: firstName,
              #lastName: lastName,
              #phoneNumber: phoneNumber,
              #avatarUrl: avatarUrl,
            },
          ),
        )),
      ) as _i4.Future<_i2.UserProfile>);
}
