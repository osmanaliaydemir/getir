// Mocks generated by Mockito 5.4.4 from annotations
// in getir_mobile/test/unit/usecases/cart_usecases_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:getir_mobile/domain/entities/cart.dart' as _i2;
import 'package:getir_mobile/domain/repositories/cart_repository.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeCart_0 extends _i1.SmartFake implements _i2.Cart {
  _FakeCart_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeCartItem_1 extends _i1.SmartFake implements _i2.CartItem {
  _FakeCartItem_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [CartRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockCartRepository extends _i1.Mock implements _i3.CartRepository {
  MockCartRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Cart> getCart() => (super.noSuchMethod(
        Invocation.method(
          #getCart,
          [],
        ),
        returnValue: _i4.Future<_i2.Cart>.value(_FakeCart_0(
          this,
          Invocation.method(
            #getCart,
            [],
          ),
        )),
      ) as _i4.Future<_i2.Cart>);

  @override
  _i4.Future<_i2.CartItem> addToCart({
    required String? productId,
    required int? quantity,
    String? variantId,
    List<String>? optionIds,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #addToCart,
          [],
          {
            #productId: productId,
            #quantity: quantity,
            #variantId: variantId,
            #optionIds: optionIds,
          },
        ),
        returnValue: _i4.Future<_i2.CartItem>.value(_FakeCartItem_1(
          this,
          Invocation.method(
            #addToCart,
            [],
            {
              #productId: productId,
              #quantity: quantity,
              #variantId: variantId,
              #optionIds: optionIds,
            },
          ),
        )),
      ) as _i4.Future<_i2.CartItem>);

  @override
  _i4.Future<_i2.CartItem> updateCartItem({
    required String? itemId,
    required int? quantity,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateCartItem,
          [],
          {
            #itemId: itemId,
            #quantity: quantity,
          },
        ),
        returnValue: _i4.Future<_i2.CartItem>.value(_FakeCartItem_1(
          this,
          Invocation.method(
            #updateCartItem,
            [],
            {
              #itemId: itemId,
              #quantity: quantity,
            },
          ),
        )),
      ) as _i4.Future<_i2.CartItem>);

  @override
  _i4.Future<void> removeFromCart(String? itemId) => (super.noSuchMethod(
        Invocation.method(
          #removeFromCart,
          [itemId],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> clearCart() => (super.noSuchMethod(
        Invocation.method(
          #clearCart,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<_i2.Cart> applyCoupon(String? couponCode) => (super.noSuchMethod(
        Invocation.method(
          #applyCoupon,
          [couponCode],
        ),
        returnValue: _i4.Future<_i2.Cart>.value(_FakeCart_0(
          this,
          Invocation.method(
            #applyCoupon,
            [couponCode],
          ),
        )),
      ) as _i4.Future<_i2.Cart>);

  @override
  _i4.Future<_i2.Cart> removeCoupon() => (super.noSuchMethod(
        Invocation.method(
          #removeCoupon,
          [],
        ),
        returnValue: _i4.Future<_i2.Cart>.value(_FakeCart_0(
          this,
          Invocation.method(
            #removeCoupon,
            [],
          ),
        )),
      ) as _i4.Future<_i2.Cart>);
}
