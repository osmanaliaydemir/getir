// Mocks generated by Mockito 5.4.4 from annotations
// in getir_mobile/test/unit/services/order_service_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:getir_mobile/core/errors/result.dart' as _i2;
import 'package:getir_mobile/data/datasources/order_datasource.dart' as _i6;
import 'package:getir_mobile/domain/entities/order.dart' as _i5;
import 'package:getir_mobile/domain/repositories/order_repository.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeResult_0<T> extends _i1.SmartFake implements _i2.Result<T> {
  _FakeResult_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [IOrderRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockIOrderRepository extends _i1.Mock implements _i3.IOrderRepository {
  MockIOrderRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Result<_i5.Order>> createOrder(
          _i6.CreateOrderRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #createOrder,
          [request],
        ),
        returnValue:
            _i4.Future<_i2.Result<_i5.Order>>.value(_FakeResult_0<_i5.Order>(
          this,
          Invocation.method(
            #createOrder,
            [request],
          ),
        )),
      ) as _i4.Future<_i2.Result<_i5.Order>>);

  @override
  _i4.Future<_i2.Result<List<_i5.Order>>> getUserOrders() =>
      (super.noSuchMethod(
        Invocation.method(
          #getUserOrders,
          [],
        ),
        returnValue: _i4.Future<_i2.Result<List<_i5.Order>>>.value(
            _FakeResult_0<List<_i5.Order>>(
          this,
          Invocation.method(
            #getUserOrders,
            [],
          ),
        )),
      ) as _i4.Future<_i2.Result<List<_i5.Order>>>);

  @override
  _i4.Future<_i2.Result<_i5.Order>> getOrderById(String? orderId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getOrderById,
          [orderId],
        ),
        returnValue:
            _i4.Future<_i2.Result<_i5.Order>>.value(_FakeResult_0<_i5.Order>(
          this,
          Invocation.method(
            #getOrderById,
            [orderId],
          ),
        )),
      ) as _i4.Future<_i2.Result<_i5.Order>>);

  @override
  _i4.Future<_i2.Result<_i5.Order>> cancelOrder(String? orderId) =>
      (super.noSuchMethod(
        Invocation.method(
          #cancelOrder,
          [orderId],
        ),
        returnValue:
            _i4.Future<_i2.Result<_i5.Order>>.value(_FakeResult_0<_i5.Order>(
          this,
          Invocation.method(
            #cancelOrder,
            [orderId],
          ),
        )),
      ) as _i4.Future<_i2.Result<_i5.Order>>);

  @override
  _i4.Future<_i2.Result<_i6.PaymentResult>> processPayment(
          _i6.CreatePaymentRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #processPayment,
          [request],
        ),
        returnValue: _i4.Future<_i2.Result<_i6.PaymentResult>>.value(
            _FakeResult_0<_i6.PaymentResult>(
          this,
          Invocation.method(
            #processPayment,
            [request],
          ),
        )),
      ) as _i4.Future<_i2.Result<_i6.PaymentResult>>);

  @override
  _i4.Future<_i2.Result<_i6.PaymentResult>> getPaymentStatus(
          String? paymentId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getPaymentStatus,
          [paymentId],
        ),
        returnValue: _i4.Future<_i2.Result<_i6.PaymentResult>>.value(
            _FakeResult_0<_i6.PaymentResult>(
          this,
          Invocation.method(
            #getPaymentStatus,
            [paymentId],
          ),
        )),
      ) as _i4.Future<_i2.Result<_i6.PaymentResult>>);
}
