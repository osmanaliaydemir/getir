// Mocks generated by Mockito 5.4.4 from annotations
// in getir_mobile/test/unit/blocs/order_bloc_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:firebase_analytics/firebase_analytics.dart' as _i3;
import 'package:firebase_performance/firebase_performance.dart' as _i4;
import 'package:getir_mobile/core/errors/result.dart' as _i2;
import 'package:getir_mobile/core/services/analytics_service.dart' as _i9;
import 'package:getir_mobile/data/datasources/order_datasource.dart' as _i8;
import 'package:getir_mobile/domain/entities/order.dart' as _i7;
import 'package:getir_mobile/domain/services/order_service.dart' as _i6;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i10;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeResult_0<T> extends _i1.SmartFake implements _i2.Result<T> {
  _FakeResult_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeFirebaseAnalyticsObserver_1 extends _i1.SmartFake
    implements _i3.FirebaseAnalyticsObserver {
  _FakeFirebaseAnalyticsObserver_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeTrace_2 extends _i1.SmartFake implements _i4.Trace {
  _FakeTrace_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeFuture_3<T1> extends _i1.SmartFake implements _i5.Future<T1> {
  _FakeFuture_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [OrderService].
///
/// See the documentation for Mockito's code generation for more information.
class MockOrderService extends _i1.Mock implements _i6.OrderService {
  MockOrderService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<_i2.Result<_i7.Order>> createOrder(
          _i8.CreateOrderRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #createOrder,
          [request],
        ),
        returnValue:
            _i5.Future<_i2.Result<_i7.Order>>.value(_FakeResult_0<_i7.Order>(
          this,
          Invocation.method(
            #createOrder,
            [request],
          ),
        )),
      ) as _i5.Future<_i2.Result<_i7.Order>>);

  @override
  _i5.Future<_i2.Result<List<_i7.Order>>> getUserOrders() =>
      (super.noSuchMethod(
        Invocation.method(
          #getUserOrders,
          [],
        ),
        returnValue: _i5.Future<_i2.Result<List<_i7.Order>>>.value(
            _FakeResult_0<List<_i7.Order>>(
          this,
          Invocation.method(
            #getUserOrders,
            [],
          ),
        )),
      ) as _i5.Future<_i2.Result<List<_i7.Order>>>);

  @override
  _i5.Future<_i2.Result<_i7.Order>> getOrderById(String? orderId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getOrderById,
          [orderId],
        ),
        returnValue:
            _i5.Future<_i2.Result<_i7.Order>>.value(_FakeResult_0<_i7.Order>(
          this,
          Invocation.method(
            #getOrderById,
            [orderId],
          ),
        )),
      ) as _i5.Future<_i2.Result<_i7.Order>>);

  @override
  _i5.Future<_i2.Result<_i7.Order>> cancelOrder(String? orderId) =>
      (super.noSuchMethod(
        Invocation.method(
          #cancelOrder,
          [orderId],
        ),
        returnValue:
            _i5.Future<_i2.Result<_i7.Order>>.value(_FakeResult_0<_i7.Order>(
          this,
          Invocation.method(
            #cancelOrder,
            [orderId],
          ),
        )),
      ) as _i5.Future<_i2.Result<_i7.Order>>);

  @override
  _i5.Future<_i2.Result<_i8.PaymentResult>> processPayment(
          _i8.CreatePaymentRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #processPayment,
          [request],
        ),
        returnValue: _i5.Future<_i2.Result<_i8.PaymentResult>>.value(
            _FakeResult_0<_i8.PaymentResult>(
          this,
          Invocation.method(
            #processPayment,
            [request],
          ),
        )),
      ) as _i5.Future<_i2.Result<_i8.PaymentResult>>);

  @override
  _i5.Future<_i2.Result<_i8.PaymentResult>> getPaymentStatus(
          String? paymentId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getPaymentStatus,
          [paymentId],
        ),
        returnValue: _i5.Future<_i2.Result<_i8.PaymentResult>>.value(
            _FakeResult_0<_i8.PaymentResult>(
          this,
          Invocation.method(
            #getPaymentStatus,
            [paymentId],
          ),
        )),
      ) as _i5.Future<_i2.Result<_i8.PaymentResult>>);
}

/// A class which mocks [AnalyticsService].
///
/// See the documentation for Mockito's code generation for more information.
class MockAnalyticsService extends _i1.Mock implements _i9.AnalyticsService {
  MockAnalyticsService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.FirebaseAnalyticsObserver get observer => (super.noSuchMethod(
        Invocation.getter(#observer),
        returnValue: _FakeFirebaseAnalyticsObserver_1(
          this,
          Invocation.getter(#observer),
        ),
      ) as _i3.FirebaseAnalyticsObserver);

  @override
  _i5.Future<void> logScreenView({
    required String? screenName,
    String? screenClass,
    Map<String, dynamic>? parameters,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #logScreenView,
          [],
          {
            #screenName: screenName,
            #screenClass: screenClass,
            #parameters: parameters,
          },
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> logButtonClick({
    required String? buttonName,
    String? screenName,
    Map<String, dynamic>? parameters,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #logButtonClick,
          [],
          {
            #buttonName: buttonName,
            #screenName: screenName,
            #parameters: parameters,
          },
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> logSearch({
    required String? searchTerm,
    String? searchType,
    int? resultCount,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #logSearch,
          [],
          {
            #searchTerm: searchTerm,
            #searchType: searchType,
            #resultCount: resultCount,
          },
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> logProductView({
    required String? productId,
    required String? productName,
    String? category,
    double? price,
    String? currency,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #logProductView,
          [],
          {
            #productId: productId,
            #productName: productName,
            #category: category,
            #price: price,
            #currency: currency,
          },
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> logAddToCart({
    required String? productId,
    required String? productName,
    required double? price,
    String? category,
    int? quantity = 1,
    String? currency,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #logAddToCart,
          [],
          {
            #productId: productId,
            #productName: productName,
            #price: price,
            #category: category,
            #quantity: quantity,
            #currency: currency,
          },
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> logRemoveFromCart({
    required String? productId,
    required String? productName,
    required double? price,
    int? quantity = 1,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #logRemoveFromCart,
          [],
          {
            #productId: productId,
            #productName: productName,
            #price: price,
            #quantity: quantity,
          },
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> logAddToFavorites({
    required String? itemId,
    required String? itemName,
    String? itemType,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #logAddToFavorites,
          [],
          {
            #itemId: itemId,
            #itemName: itemName,
            #itemType: itemType,
          },
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> logBeginCheckout({
    required double? value,
    required String? currency,
    List<_i3.AnalyticsEventItem>? items,
    String? coupon,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #logBeginCheckout,
          [],
          {
            #value: value,
            #currency: currency,
            #items: items,
            #coupon: coupon,
          },
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> logAddPaymentInfo({
    required String? paymentType,
    required double? value,
    String? currency,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #logAddPaymentInfo,
          [],
          {
            #paymentType: paymentType,
            #value: value,
            #currency: currency,
          },
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> logPurchase({
    required String? orderId,
    required double? total,
    required String? currency,
    List<_i3.AnalyticsEventItem>? items,
    double? tax,
    double? shipping,
    String? coupon,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #logPurchase,
          [],
          {
            #orderId: orderId,
            #total: total,
            #currency: currency,
            #items: items,
            #tax: tax,
            #shipping: shipping,
            #coupon: coupon,
          },
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> logOrderCancelled({
    required String? orderId,
    required double? value,
    String? reason,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #logOrderCancelled,
          [],
          {
            #orderId: orderId,
            #value: value,
            #reason: reason,
          },
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> logLogin({String? method}) => (super.noSuchMethod(
        Invocation.method(
          #logLogin,
          [],
          {#method: method},
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> logSignUp({String? method}) => (super.noSuchMethod(
        Invocation.method(
          #logSignUp,
          [],
          {#method: method},
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> logLogout() => (super.noSuchMethod(
        Invocation.method(
          #logLogout,
          [],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> logError({
    required dynamic error,
    StackTrace? stackTrace,
    String? reason,
    Map<String, dynamic>? context,
    bool? fatal = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #logError,
          [],
          {
            #error: error,
            #stackTrace: stackTrace,
            #reason: reason,
            #context: context,
            #fatal: fatal,
          },
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> setErrorContext({
    String? userId,
    String? screenName,
    Map<String, dynamic>? customKeys,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #setErrorContext,
          [],
          {
            #userId: userId,
            #screenName: screenName,
            #customKeys: customKeys,
          },
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<_i4.Trace> startTrace(String? traceName) => (super.noSuchMethod(
        Invocation.method(
          #startTrace,
          [traceName],
        ),
        returnValue: _i5.Future<_i4.Trace>.value(_FakeTrace_2(
          this,
          Invocation.method(
            #startTrace,
            [traceName],
          ),
        )),
      ) as _i5.Future<_i4.Trace>);

  @override
  _i5.Future<void> stopTrace(_i4.Trace? trace) => (super.noSuchMethod(
        Invocation.method(
          #stopTrace,
          [trace],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<T> measurePerformance<T>({
    required String? traceName,
    required _i5.Future<T> Function()? operation,
    Map<String, String>? attributes,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #measurePerformance,
          [],
          {
            #traceName: traceName,
            #operation: operation,
            #attributes: attributes,
          },
        ),
        returnValue: _i10.ifNotNull(
              _i10.dummyValueOrNull<T>(
                this,
                Invocation.method(
                  #measurePerformance,
                  [],
                  {
                    #traceName: traceName,
                    #operation: operation,
                    #attributes: attributes,
                  },
                ),
              ),
              (T v) => _i5.Future<T>.value(v),
            ) ??
            _FakeFuture_3<T>(
              this,
              Invocation.method(
                #measurePerformance,
                [],
                {
                  #traceName: traceName,
                  #operation: operation,
                  #attributes: attributes,
                },
              ),
            ),
      ) as _i5.Future<T>);

  @override
  _i5.Future<void> setUserId(String? userId) => (super.noSuchMethod(
        Invocation.method(
          #setUserId,
          [userId],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> setUserProperty({
    required String? name,
    required String? value,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #setUserProperty,
          [],
          {
            #name: name,
            #value: value,
          },
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> setUserDemographics({
    int? age,
    String? gender,
    String? interests,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #setUserDemographics,
          [],
          {
            #age: age,
            #gender: gender,
            #interests: interests,
          },
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> logCustomEvent({
    required String? eventName,
    Map<String, dynamic>? parameters,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #logCustomEvent,
          [],
          {
            #eventName: eventName,
            #parameters: parameters,
          },
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> setAnalyticsEnabled(bool? enabled) => (super.noSuchMethod(
        Invocation.method(
          #setAnalyticsEnabled,
          [enabled],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> setCrashlyticsEnabled(bool? enabled) => (super.noSuchMethod(
        Invocation.method(
          #setCrashlyticsEnabled,
          [enabled],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> resetAnalyticsData() => (super.noSuchMethod(
        Invocation.method(
          #resetAnalyticsData,
          [],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
}
