name: Flutter CI

on:
  push:
    branches: [ main, develop, feature/** ]
  pull_request:
    branches: [ main, develop ]

jobs:
  analyze:
    name: Analyze & Lint
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
      
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.19.0'
          channel: 'stable'
          
      - name: Install dependencies
        run: flutter pub get
        
      - name: Verify formatting
        run: dart format --set-exit-if-changed lib/ test/
        
      - name: Analyze code
        run: flutter analyze
        
      - name: Check for outdated dependencies
        run: flutter pub outdated

  test:
    name: Run Tests
    runs-on: ubuntu-latest
    needs: analyze
    
    steps:
      - uses: actions/checkout@v4
      
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.19.0'
          channel: 'stable'
          
      - name: Install dependencies
        run: flutter pub get
        
      - name: Run tests with coverage
        run: flutter test --coverage
        
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          files: coverage/lcov.info
          fail_ci_if_error: false
          
      - name: Check coverage threshold (60%)
        run: |
          # Install lcov
          sudo apt-get install -y lcov
          
          # Get coverage percentage
          COVERAGE=$(lcov --summary coverage/lcov.info 2>&1 | grep lines | awk '{print $2}' | sed 's/%//')
          echo "Coverage: $COVERAGE%"
          
          # Check if coverage is above threshold
          if (( $(echo "$COVERAGE < 60" | bc -l) )); then
            echo "❌ Coverage is below 60% threshold!"
            exit 1
          else
            echo "✅ Coverage is above 60% threshold!"
          fi

  build_android:
    name: Build Android APK
    runs-on: ubuntu-latest
    needs: test
    
    steps:
      - uses: actions/checkout@v4
      
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.19.0'
          channel: 'stable'
          
      - name: Install dependencies
        run: flutter pub get
        
      - name: Build APK
        run: flutter build apk --debug
        
      - name: Upload APK artifact
        uses: actions/upload-artifact@v3
        with:
          name: app-debug.apk
          path: build/app/outputs/flutter-apk/app-debug.apk

  build_ios:
    name: Build iOS (macOS only)
    runs-on: macos-latest
    needs: test
    
    steps:
      - uses: actions/checkout@v4
      
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.19.0'
          channel: 'stable'
          
      - name: Install dependencies
        run: flutter pub get
        
      - name: Build iOS (no codesign)
        run: flutter build ios --debug --no-codesign

