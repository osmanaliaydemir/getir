version: '3.8'

# ===================================
# Production Docker Compose
# ===================================

services:
  # SQL Server - Production optimized
  sqlserver:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: getir-sqlserver-prod
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=${SQL_SA_PASSWORD}  # From .env file
      - MSSQL_PID=Standard
    volumes:
      - sqlserver-prod-data:/var/opt/mssql
    networks:
      - getir-network
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 4G
        reservations:
          cpus: '1'
          memory: 2G
    restart: always

  # Getir API - Production
  api:
    build:
      context: .
      dockerfile: Dockerfile
      target: final
    container_name: getir-api-prod
    depends_on:
      - sqlserver
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ASPNETCORE_URLS=http://+:8080
      - ConnectionStrings__DefaultConnection=Server=sqlserver;Database=GetirDb;User Id=sa;Password=${SQL_SA_PASSWORD};TrustServerCertificate=True;Encrypt=True;MultipleActiveResultSets=true
      - Jwt__Issuer=${JWT_ISSUER}
      - Jwt__Audience=${JWT_AUDIENCE}
      - Jwt__Secret=${JWT_SECRET}
      - Jwt__AccessTokenMinutes=60
      - Jwt__RefreshTokenMinutes=10080
    ports:
      - "80:8080"
    networks:
      - getir-network
    deploy:
      replicas: 3
      resources:
        limits:
          cpus: '1'
          memory: 1G
        reservations:
          cpus: '0.5'
          memory: 512M
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "curl --fail http://localhost:8080/health || exit 1"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 60s

  # Nginx - Reverse Proxy (Optional)
  nginx:
    image: nginx:alpine
    container_name: getir-nginx
    ports:
      - "443:443"
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - api
    networks:
      - getir-network
    restart: always

networks:
  getir-network:
    driver: bridge

volumes:
  sqlserver-prod-data:
